# This is a basic workflow to help you get started with Actions

name: UCRT

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        mode: ["gcc-12.1.0", "gcc-11.3.0", "gcc-10.4.0"]
        arch: ["i686", "x86_64"]
        threading: ["posix", "win32"]
        exceptions: ["dwarfseh", "sjlj"]

    defaults:
      run:
        shell: msys2 {0}

    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            lndir
            git
            subversion
            tar
            zip
            p7zip
            make
            patch
            automake-wrapper
            autoconf
            libtool
            flex
            bison
            gettext
            gettext-devel
            wget
            sshpass
            texinfo
            autogen
            dejagnu
            pkgconf
      - name: Change autocrlf
        run: git config --global core.autocrlf input
        shell: bash

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the current repo
        uses: actions/checkout@v3
        with:
          path: mingw64-builds-GHA

      - name: Get build scripts
        uses: actions/checkout@v3
        with:
          repository: niXman/mingw-builds
          ref: 139b8d61866c2984ac1429a52d63e33e8ad1c2a9
          path: mingw-builds

      - name: Patch build scripts
        run: git apply $GITHUB_WORKSPACE/mingw64-builds-GHA/build-patch/mingw-builds.patch
        working-directory: mingw-builds

      - name: Download toolchains (i686, UCRT stage 1)
        if: ${{ matrix.arch == 'i686' || matrix.exceptions == 'sjlj' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ucrt-stage1.yml
          name: ${{ matrix.mode }}_i686-posix-${{ matrix.exceptions }}-ucrt-stage1
          path: toolchain-ucrt-stage1-i686

      - name: Install toolchains (i686, UCRT stage 1)
        if: ${{ matrix.arch == 'i686' || matrix.exceptions == 'sjlj' }}
        run: 7z x toolchain-ucrt-stage1-i686/i686-*.7z -o/d/toolchains

      - name: Download toolchains (x86_64, UCRT stage 1)
        if: ${{ matrix.arch == 'x86_64' || matrix.exceptions == 'sjlj' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ucrt-stage1.yml
          name: ${{ matrix.mode }}_x86_64-posix-${{ matrix.exceptions }}-ucrt-stage1
          path: toolchain-ucrt-stage1-x86_64

      - name: Install toolchains (x86_64, UCRT stage 1)
        if: ${{ matrix.arch == 'x86_64' || matrix.exceptions == 'sjlj' }}
        run: 7z x toolchain-ucrt-stage1-x86_64/x86_64-*.7z -o/d/toolchains

      - name: Build
        run: ./build --buildroot=/d/${{ matrix.mode }} --mode=${{ matrix.mode }} --arch=${{ matrix.arch }} --exceptions=${{ matrix.exceptions }} --rt-version=trunk --threads=${{ matrix.threading }} --with-default-msvcrt=ucrt --provided-toolchain=/d/toolchains --enable-languages=c,c++ --static-gcc --cflags="-Wno-format" --jobs=2 --no-extras --bin-compress --src-compress --logviewer-command=cat --wait-for-logviewer
        working-directory: mingw-builds

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.mode }}_${{ matrix.arch }}-${{ matrix.threading }}-${{ matrix.exceptions }}-ucrt
          path: D:/${{ matrix.mode }}/archives/*.7z
