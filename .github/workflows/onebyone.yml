# This is a basic workflow to help you get started with Actions

name: ReleaseOnebyOne

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      modes:
        description: 'modes'
        required: true
        type: string
        default: '["gcc-14.2.0"]'
      arch:
        description: 'arch'
        required: true
        type: string
        default: '["x86_64", "i686"]'
      threading:
        description: 'threading'
        required: true
        type: string
        default: '["posix", "win32", "mcf"]'
      exceptions:
        description: 'exceptions'
        required: true
        type: string
        default: '["dwarf", "seh", "sjlj"]'
      crt:
        description: 'crt'
        required: true
        type: string
        default: '["ucrt", "msvcrt"]'
      releasever:
        description: 'release version, e.g. 2024-07-07'
        required: false
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build the complete toolchains
  build:
    strategy:
      fail-fast: false
      matrix:
        mode: ${{ fromJSON(github.event.inputs.modes) }}
        arch: ${{ fromJSON(github.event.inputs.arch) }}
        threading: ${{ fromJSON(github.event.inputs.threading) }}
        exceptions: ${{ fromJSON(github.event.inputs.exceptions) }}
        crt: ${{ fromJSON(github.event.inputs.crt) }}
        exclude:
          - arch: 'i686'
            exceptions: 'seh'
          - arch: 'x86_64'
            exceptions: 'dwarf'

    # The type of runner that the job will run on
    runs-on: windows-latest

    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            lndir
            git
            subversion
            tar
            zip
            p7zip
            make
            patch
            automake-wrapper
            autoconf
            autoconf-archive
            libtool
            flex
            bison
            gettext
            gettext-devel
            wget
            sshpass
            texinfo
            autogen
            dejagnu
            pkgconf
            dos2unix

      - name: Change autocrlf
        shell: bash
        run: git config --global core.autocrlf input

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the current repo
        uses: actions/checkout@v4
        with:
          path: mingw64-builds-GHA

      - name: Get build scripts
        uses: actions/checkout@v4
        with:
          repository: bitsavers/mingw-builds
          ref: custom
          path: mingw-builds

      - name: Show HEAD
        run: git show --summary
        working-directory: mingw-builds

      # - name: Install host toolchain (i686)
      #   shell: msys2 {0}
      #   if: ${{ matrix.arch == 'i686' || matrix.exceptions == 'sjlj' }}
      #   run: |
      #     curl.exe -L -O https://github.com/starg2/mingw64-builds-GHA/releases/download/v2024-04-10/gcc-13.2.0_i686-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}.zip
      #     7z e gcc-13.2.0_i686-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}.zip i686-13.2.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v12.7z
      #     7z x i686-13.2.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v12.7z -o/d/toolchains

      # - name: Install host toolchain (x86_64)
      #   shell: msys2 {0}
      #   if: ${{ matrix.arch == 'x86_64' || matrix.exceptions == 'sjlj' }}
      #   run: |
      #     curl.exe -L -O https://github.com/starg2/mingw64-builds-GHA/releases/download/v2024-04-10/gcc-13.2.0_x86_64-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}.zip
      #     7z e gcc-13.2.0_x86_64-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}.zip x86_64-13.2.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v12.7z
      #     7z x x86_64-13.2.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v12.7z -o/d/toolchains

      - name: Install host toolchain (i686)
        shell: msys2 {0}
        if: ${{ matrix.arch == 'i686' || matrix.exceptions == 'sjlj' }}
        run: |
          curl.exe -L -O https://github.com/bitsavers/mingw-builds-binaries/releases/download/v2024-07-07/i686-14.1.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v13.7z
          7z x i686-14.1.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v13.7z -o/d/toolchains

      - name: Install host toolchain (x86_64)
        shell: msys2 {0}
        if: ${{ matrix.arch == 'x86_64' || matrix.exceptions == 'sjlj' }}
        run: |
          curl.exe -L -O https://github.com/bitsavers/mingw-builds-binaries/releases/download/v2024-07-07/x86_64-14.1.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v13.7z
          7z x x86_64-14.1.0-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-rt_v13.7z -o/d/toolchains

      - name: Build
        shell: msys2 {0}
        run: >-
          ./build
          --buildroot=/c/build/${{ matrix.mode }}
          --mode=${{ matrix.mode }}
          --arch=${{ matrix.arch }}
          --exceptions=${{ matrix.exceptions }}
          --rt-version=trunk
          --threads=${{ matrix.threading }}
          --with-default-msvcrt=${{ matrix.crt }}
          --provided-toolchain=/d/toolchains
          --enable-languages=c,c++
          --jobs=4
          --bin-compress
          --src-compress
          --logviewer-command=cat
          --wait-for-logviewer
        working-directory: mingw-builds

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.mode }}_${{ matrix.arch }}-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}
          path: C:/build/${{ matrix.mode }}/archives/*.7z

        # 'C:/build/${{ matrix.mode }}/archives/src-*.7z'
        # 'C:/build/${{ matrix.mode }}/archives/${{ matrix.arch }}-*-release-${{ matrix.threading }}-${{ matrix.exceptions }}-${{ matrix.crt }}-*.7z'
      - name: Upload binaries to release
        if: ${{ github.event.inputs.releasever != '' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: C:/build/${{ matrix.mode }}/archives/*.7z
          tag: v${{ github.event.inputs.releasever }}
          file_glob: true
          release_name: 'GCC build (${{ github.event.inputs.releasever }})'
          overwrite: true
          prerelease: true
          body: ''

      # # https://github.com/termux/upload-release-action
      # - name: Upload binaries to release
      #   uses: termux/upload-release-action@v4
      #   with:
      #     repo_token: ${{ github.token }}
      #     file: target/release/mything
      #     asset_name: mything
      #     tag: ${{ github.ref }}
      #     overwrite: true
      #     body: "This is my release text"
      #     checksums: sha256,sha512,md5
