# This is a basic workflow to help you get started with Actions

name: MinGW-w64

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        mode: ["gcc-11.2.0", "gcc-10.3.0", "gcc-9.4.0"]
        arch: ["i686", "x86_64"]
        threading: ["posix", "win32"]

    defaults:
      run:
        shell: msys2 {0}

    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            lndir
            git
            subversion
            tar
            zip
            p7zip
            make
            patch
            automake-wrapper
            autoconf
            libtool
            flex
            bison
            gettext
            gettext-devel
            wget
            sshpass
            texinfo
            autogen
            dejagnu

      - name: Get build scripts
        run: |
          cd
          git clone https://github.com/niXman/mingw-builds.git -b develop --depth 1

      - name: Patch build scripts
        run: |
          cd ~/mingw-builds
          git apply $GITHUB_WORKSPACE/build-patch/https.patch

      - name: Build (SJLJ)
        if: ${{ matrix.arch == 'i686' }}
        run: |
          cd ~/mingw-builds
          ./build --mode=${{ matrix.mode }} --arch=${{ matrix.arch }} --exceptions=sjlj --rt-version=trunk --threads=${{ matrix.threading }} --no-multilib --enable-languages=c,c++ --static-gcc --cflags="-Wno-format" --jobs=2 --bin-compress --src-compress

      - name: Build (SEH)
        if: ${{ matrix.arch == 'x86_64' }}
        run: |
          cd ~/mingw-builds
          ./build --mode=${{ matrix.mode }} --arch=${{ matrix.arch }} --exceptions=seh --rt-version=trunk --threads=${{ matrix.threading }} --no-multilib --enable-languages=c,c++ --static-gcc --cflags="-Wno-format" --jobs=2 --bin-compress --src-compress

      - name: Move artifacts
        run: |
          mkdir /c/mingw64_artifacts
          mv ~/mingw-${{ matrix.mode }}/archives/*.7z /c/mingw64_artifacts

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.mode }}_${{ matrix.arch }}-${{ matrix.threading }}
          path: C:/mingw64_artifacts/*.7z
