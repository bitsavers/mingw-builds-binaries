diff --git a/build b/build
index 40cb7ac..b193920 100755
--- a/build
+++ b/build
@@ -318,7 +318,7 @@ while [[ $# > 0 ]]; do
                     RUNTIME_BRANCH="v10.x"
                 ;;
 				trunk)
-					RUNTIME_VERSION=v9
+					RUNTIME_VERSION=v11
 					RUNTIME_BRANCH="master"
 				;;
 				v3.3.0)
diff --git a/library/config-win.sh b/library/config-win.sh
index 0192bff..11e2f43 100644
--- a/library/config-win.sh
+++ b/library/config-win.sh
@@ -101,6 +101,7 @@ function func_test_installed_packages {
 		texinfo
 		autogen
 		dejagnu
+		pkgconf
 	)
 
 	echo "--> installing required packages..."
diff --git a/library/config.sh b/library/config.sh
index 9e924c8..46e44ab 100644
--- a/library/config.sh
+++ b/library/config.sh
@@ -189,10 +189,10 @@ esac
 
 # **************************************************************************
 
-echo -n "-> Checking for installed packages... "
-func_test_installed_packages
-[[ $? == 1 ]] && exit 1
-echo "done"
+#echo -n "-> Checking for installed packages... "
+#func_test_installed_packages
+#[[ $? == 1 ]] && exit 1
+#echo "done"
 
 # **************************************************************************
 
diff --git a/library/functions.sh b/library/functions.sh
index 46e5f33..2e15f63 100644
--- a/library/functions.sh
+++ b/library/functions.sh
@@ -438,7 +438,6 @@ function func_download {
 					--tries=$_WGET_TRIES \
 					--timeout=$_WGET_TIMEOUT \
 					--wait=$_WGET_WAIT \
-					--no-check-certificate \
 					$_url -O $_lib_name > $_log_name 2>&1
 				_result=$?
 			}
diff --git a/patches/zlib/01-zlib-1.2.13-buildsys.mingw.patch b/patches/zlib/01-zlib-1.2.13-buildsys.mingw.patch
new file mode 100644
index 0000000..fb47570
--- /dev/null
+++ b/patches/zlib/01-zlib-1.2.13-buildsys.mingw.patch
@@ -0,0 +1,256 @@
+--- a/configure
++++ b/configure
+@@ -41,6 +41,7 @@
+ 
+ # destination name for static library
+ STATICLIB=libz.a
++IMPORTLIB=
+ 
+ # extract zlib version numbers from zlib.h
+ VER=`sed -n -e '/VERSION "/s/.*"\(.*\)".*/\1/p' < ${SRCDIR}zlib.h`
+@@ -77,7 +78,7 @@
+ prefix=${prefix-/usr/local}
+ exec_prefix=${exec_prefix-'${prefix}'}
+ libdir=${libdir-'${exec_prefix}/lib'}
+-sharedlibdir=${sharedlibdir-'${libdir}'}
++sharedlibdir=${sharedlibdir-'${exec_prefix}/bin'}
+ includedir=${includedir-'${prefix}/include'}
+ mandir=${mandir-'${prefix}/share/man'}
+ shared_ext='.so'
+@@ -93,6 +94,7 @@
+ sanitize=0
+ old_cc="$CC"
+ old_cflags="$CFLAGS"
++old_ldflags="$LDFLAGS"
+ OBJC='$(OBJZ) $(OBJG)'
+ PIC_OBJC='$(PIC_OBJZ) $(PIC_OBJG)'
+ 
+@@ -232,12 +234,23 @@
+         LDSHARED=${LDSHARED-"$cc -shared -Wl,-soname,libz.so.1,--version-script,${SRCDIR}zlib.map"}
+         LDCONFIG="ldconfig -m" ;;
+   CYGWIN* | Cygwin* | cygwin* | *-cygwin* | OS/2*)
++        CFLAGS="${CFLAGS} -D_LARGEFILE_SOURCE=1 -D_FILE_OFFSET_BITS=64"
++        SFLAGS="${CFLAGS}"
++        LDFLAGS="-L. ${old_ldflags}"
++        shared_ext=".dll"
++        SHAREDLIB='cygz.dll'
++        IMPORTLIB='libz.dll.a'
++        LDSHARED=${LDSHARED-"$cc -shared -Wl,--export-all-symbols -Wl,--enable-auto-image-base -Wl,--out-implib=${IMPORTLIB}"}
++        LDSHAREDLIBC=''
+         EXE='.exe' ;;
+   MINGW* | mingw* | *-mingw*)
+-        rm -f $test.[co] $test $test$shared_ext
+-        echo "If this doesn't work for you, try win32/Makefile.gcc." | tee -a configure.log
+-        LDSHARED=${LDSHARED-"$cc -shared"}
+-        LDSHAREDLIBC=""
++        SFLAGS="${CFLAGS}"
++        LDFLAGS="-L. ${old_ldflags}"
++        shared_ext=".dll"
++        SHAREDLIB='zlib1.dll'
++        IMPORTLIB='libz.dll.a'
++        LDSHARED=${LDSHARED-"$cc -shared -Wl,--export-all-symbols -Wl,--enable-auto-image-base -Wl,--out-implib=${IMPORTLIB}"}
++        LDSHAREDLIBC=''
+         EXE='.exe' ;;
+   QNX*) # This is for QNX6. I suppose that the QNX rule below is for QNX2,QNX4
+         # (alain.bonnefoy@icbt.com)
+@@ -364,11 +377,32 @@
+   esac
+ fi
+ 
++case "$uname" in
++  *CYGWIN* | *Cygwin* | *cygwin* )
++    # On cygwin, we always build both shared and static libs
++    ALL="static shared"
++    SHAREDLIBPOST='/bin/true'
++    SHAREDTARGET=${SHAREDLIB}
++    TEST="all teststatic testshared"
++    ;;
++  *MINGW* | *Mingw* | *mingw* )
++    # On Mingw, we always build both shared and static libs
++    ALL="static shared"
++    SHAREDLIBPOST='/bin/true'
++    SHAREDTARGET=${SHAREDLIB}
++    TEST="all teststatic testshared"
++    ;;
++  *)
++
+ # destination names for shared library if not defined above
+ SHAREDLIB=${SHAREDLIB-"libz$shared_ext"}
+ SHAREDLIBV=${SHAREDLIBV-"libz$shared_ext.$VER"}
+ SHAREDLIBM=${SHAREDLIBM-"libz$shared_ext.$VER1"}
+-
++SHAREDLIBPOST='(rm -f $(SHAREDLIB) $(SHAREDLIBM); ln -s $@ $(SHAREDLIB) ; ln -s $@ $(SHAREDLIBM) )'
++SHAREDTARGET='$(SHAREDLIBV)'
++    ;;
++esac
++ 
+ echo >> configure.log
+ 
+ # define functions for testing compiler and library characteristics and logging the results
+@@ -849,6 +883,9 @@
+ echo SHAREDLIBM = $SHAREDLIBM >> configure.log
+ echo SHAREDLIBV = $SHAREDLIBV >> configure.log
+ echo STATICLIB = $STATICLIB >> configure.log
++echo IMPORTLIB = $IMPORTLIB >> configure.log
++echo SHAREDLIBPOST = $SHAREDLIBPOST >> configure.log
++echo SHAREDTARGET = $SHAREDTARGET >> configure.log
+ echo TEST = $TEST >> configure.log
+ echo VER = $VER >> configure.log
+ echo SRCDIR = $SRCDIR >> configure.log
+@@ -869,9 +906,12 @@
+ /^LDSHARED *=/s#=.*#=$LDSHARED#
+ /^CPP *=/s#=.*#=$CPP#
+ /^STATICLIB *=/s#=.*#=$STATICLIB#
++/^IMPORTLIB *=/s#=.*#=$IMPORTLIB#
+ /^SHAREDLIB *=/s#=.*#=$SHAREDLIB#
+ /^SHAREDLIBV *=/s#=.*#=$SHAREDLIBV#
+ /^SHAREDLIBM *=/s#=.*#=$SHAREDLIBM#
++/^SHAREDLIBPOST *=/s#=.*#=$SHAREDLIBPOST#
++/^SHAREDTARGET *=/s#=.*#=$SHAREDTARGET#
+ /^AR *=/s#=.*#=$AR#
+ /^ARFLAGS *=/s#=.*#=$ARFLAGS#
+ /^RANLIB *=/s#=.*#=$RANLIB#
+@@ -900,9 +940,12 @@
+ /^CPP *=/s#=.*#=$CPP#
+ /^LDSHARED *=/s#=.*#=$LDSHARED#
+ /^STATICLIB *=/s#=.*#=$STATICLIB#
++/^IMPORTLIB *=/s#=.*#=$IMPORTLIB#
+ /^SHAREDLIB *=/s#=.*#=$SHAREDLIB#
+ /^SHAREDLIBV *=/s#=.*#=$SHAREDLIBV#
+ /^SHAREDLIBM *=/s#=.*#=$SHAREDLIBM#
++/^SHAREDLIBPOST *=/s#=.*#=$SHAREDLIBPOST#
++/^SHAREDTARGET *=/s#=.*#=$SHAREDTARGET#
+ /^AR *=/s#=.*#=$AR#
+ /^ARFLAGS *=/s#=.*#=$ARFLAGS#
+ /^RANLIB *=/s#=.*#=$RANLIB#
+--- a/Makefile.in
++++ b/Makefile.in
+@@ -30,6 +30,9 @@
+ SHAREDLIB=libz.so
+ SHAREDLIBV=libz.so.1.2.13
+ SHAREDLIBM=libz.so.1
++IMPORTLIB=
++SHAREDLIBPOST='(rm -f $(SHAREDLIB) $(SHAREDLIBM); ln -s $@ $(SHAREDLIB) ; ln -s $@ $(SHAREDLIBM) )'
++SHAREDTARGET=$(SHAREDLIBV)
+ LIBS=$(STATICLIB) $(SHAREDLIBV)
+ 
+ AR=ar
+@@ -44,7 +47,7 @@
+ prefix = /usr/local
+ exec_prefix = ${prefix}
+ libdir = ${exec_prefix}/lib
+-sharedlibdir = ${libdir}
++sharedlibdir = ${exec_prefix}/bin
+ includedir = ${prefix}/include
+ mandir = ${prefix}/share/man
+ man3dir = ${mandir}/man3
+@@ -123,7 +126,7 @@
+ 	${QEMU_RUN} ./infcover
+ 	gcov inf*.c
+ 
+-libz.a: $(OBJS)
++$(STATICLIB): $(OBJS)
+ 	$(AR) $(ARFLAGS) $@ $(OBJS)
+ 	-@ ($(RANLIB) $@ || true) >/dev/null 2>&1
+ 
+@@ -274,11 +277,9 @@
+ 	-@mv objs/gzwrite.o $@
+ 
+ 
+-placebo $(SHAREDLIBV): $(PIC_OBJS) libz.a
++placebo $(SHAREDTARGET): $(PIC_OBJS) $(STATICLIB)
+ 	$(LDSHARED) $(SFLAGS) -o $@ $(PIC_OBJS) $(LDSHAREDLIBC) $(LDFLAGS)
+-	rm -f $(SHAREDLIB) $(SHAREDLIBM)
+-	ln -s $@ $(SHAREDLIB)
+-	ln -s $@ $(SHAREDLIBM)
++	$(SHAREDLIBPOST)
+ 	-@rmdir objs
+ 
+ example$(EXE): example.o $(STATICLIB)
+@@ -287,11 +288,11 @@
+ minigzip$(EXE): minigzip.o $(STATICLIB)
+ 	$(CC) $(CFLAGS) -o $@ minigzip.o $(TEST_LDFLAGS)
+ 
+-examplesh$(EXE): example.o $(SHAREDLIBV)
+-	$(CC) $(CFLAGS) -o $@ example.o $(LDFLAGS) -L. $(SHAREDLIBV)
++examplesh$(EXE): example.o $(SHAREDTARGET)
++	$(CC) $(CFLAGS) -o $@ example.o $(LDFLAGS) -L. $(IMPORTLIB)
+ 
+-minigzipsh$(EXE): minigzip.o $(SHAREDLIBV)
+-	$(CC) $(CFLAGS) -o $@ minigzip.o $(LDFLAGS) -L. $(SHAREDLIBV)
++minigzipsh$(EXE): minigzip.o $(SHAREDTARGET)
++	$(CC) $(CFLAGS) -o $@ minigzip.o $(LDFLAGS) -L. $(IMPORTLIB)
+ 
+ example64$(EXE): example64.o $(STATICLIB)
+ 	$(CC) $(CFLAGS) -o $@ example64.o $(TEST_LDFLAGS)
+@@ -305,20 +306,34 @@
+ 	-@if [ ! -d $(DESTDIR)$(sharedlibdir) ]; then mkdir -p $(DESTDIR)$(sharedlibdir); fi
+ 	-@if [ ! -d $(DESTDIR)$(man3dir)      ]; then mkdir -p $(DESTDIR)$(man3dir); fi
+ 	-@if [ ! -d $(DESTDIR)$(pkgconfigdir) ]; then mkdir -p $(DESTDIR)$(pkgconfigdir); fi
+-	rm -f $(DESTDIR)$(libdir)/$(STATICLIB)
+ 	cp $(STATICLIB) $(DESTDIR)$(libdir)
+-	chmod 644 $(DESTDIR)$(libdir)/$(STATICLIB)
+-	-@($(RANLIB) $(DESTDIR)$(libdir)/libz.a || true) >/dev/null 2>&1
+-	-@if test -n "$(SHAREDLIBV)"; then \
+-	  rm -f $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBV); \
+-	  cp $(SHAREDLIBV) $(DESTDIR)$(sharedlibdir); \
+-	  echo "cp $(SHAREDLIBV) $(DESTDIR)$(sharedlibdir)"; \
+-	  chmod 755 $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBV); \
+-	  echo "chmod 755 $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBV)"; \
+-	  rm -f $(DESTDIR)$(sharedlibdir)/$(SHAREDLIB) $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBM); \
+-	  ln -s $(SHAREDLIBV) $(DESTDIR)$(sharedlibdir)/$(SHAREDLIB); \
+-	  ln -s $(SHAREDLIBV) $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBM); \
+-	  ($(LDCONFIG) || true)  >/dev/null 2>&1; \
++	-@(chmod 644 $(DESTDIR)$(libdir)/$(STATICLIB))
++	-@($(RANLIB) $(DESTDIR)$(libdir)/$(STATICLIB) || true) >/dev/null 2>&1
++	-@if test -n "$(IMPORTLIB)" ; then \
++		cp $(IMPORTLIB) $(DESTDIR)$(libdir); \
++		echo "cp $(IMPORTLIB) $(DESTDIR)$(libdir)"; \
++		chmod 644 $(DESTDIR)$(libdir)/$(IMPORTLIB); \
++		if test -n "$(SHAREDTARGET)" ; then \
++			if test -f "$(SHAREDTARGET)" ; then \
++				cp $(SHAREDTARGET) $(DESTDIR)$(sharedlibdir); \
++				echo "cp $(SHAREDTARGET) $(DESTDIR)$(sharedlibdir)"; \
++				chmod 755 $(DESTDIR)$(sharedlibdir)/$(SHAREDTARGET); \
++				echo "chmod 755 $(DESTDIR)$(sharedlibdir)/$(SHAREDTARGET)"; \
++			fi; \
++		fi; \
++		if test -n "$(SHAREDLIBV)"; then \
++			if test -f "$(SHAREDLIBV)"; then \
++				rm -f $(DESTDIR)$(sharedlibdir)/$(SHAREDLIB) $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBM); \
++				ln -s $(SHAREDLIBV) $(DESTDIR)$(sharedlibdir)/$(SHAREDLIB); \
++				ln -s $(SHAREDLIBV) $(DESTDIR)$(sharedlibdir)/$(SHAREDLIBM); \
++				($(LDCONFIG) || true)  >/dev/null 2>&1; \
++			fi; \
++		fi; \
++	else \
++		cp $(SHAREDTARGET) $(DESTDIR)$(sharedlibdir); \
++		echo "cp $(SHAREDTARGET) $(DESTDIR)$(sharedlibdir)"; \
++		chmod 755 $(DESTDIR)$(sharedlibdir)/$(SHAREDTARGET); \
++		echo "chmod 755 $(DESTDIR)$(sharedlibdir)/$(SHAREDTARGET)"; \
+ 	fi
+ 	rm -f $(DESTDIR)$(man3dir)/zlib.3
+ 	cp $(SRCDIR)zlib.3 $(DESTDIR)$(man3dir)
+@@ -337,12 +352,13 @@
+ 
+ uninstall:
+ 	cd $(DESTDIR)$(includedir) && rm -f zlib.h zconf.h
+-	cd $(DESTDIR)$(libdir) && rm -f libz.a; \
++	cd $(DESTDIR)$(libdir) && rm -f $(STATCILIB) $(IMPORTLIB); \
+ 	if test -n "$(SHAREDLIBV)" -a -f $(SHAREDLIBV); then \
+ 	  rm -f $(SHAREDLIBV) $(SHAREDLIB) $(SHAREDLIBM); \
+ 	fi
+ 	cd $(DESTDIR)$(man3dir) && rm -f zlib.3
+ 	cd $(DESTDIR)$(pkgconfigdir) && rm -f zlib.pc
++	cd $(DESTDIR)$(sharedlibdir) && (rm -f $(SHAREDTARGET) || true) > /dev/null 2>&1
+ 
+ docs: zlib.3.pdf
+ 
+@@ -365,6 +381,7 @@
+ 	   example$(EXE) minigzip$(EXE) examplesh$(EXE) minigzipsh$(EXE) \
+ 	   example64$(EXE) minigzip64$(EXE) \
+ 	   infcover \
++	   $(STATICLIB) $(IMPORTLIB) $(SHAREDTARGET) $(SHAREDLIBV) $(SHAREDLIBV) $(SHAREDLIBM) \
+ 	   libz.* foo.gz so_locations \
+ 	   _match.s maketree contrib/infback9/*.o
+ 	rm -rf objs
diff --git a/scripts/bzip2.sh b/scripts/bzip2.sh
index a243eaa..bc6ba89 100644
--- a/scripts/bzip2.sh
+++ b/scripts/bzip2.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=1.0.6
+PKG_VERSION=1.0.8
 PKG_NAME=bzip2-${PKG_VERSION}
 PKG_DIR_NAME=bzip2-${PKG_VERSION}
 PKG_TYPE=.tar.gz
@@ -50,10 +50,8 @@ PKG_PRIORITY=extra
 #
 
 PKG_PATCHES=(
-	bzip2/bzip2-1.0.4-bzip2recover.patch
 	bzip2/bzip2-1.0.6-autoconfiscated.patch
 	bzip2/bzip2-use-cdecl-calling-convention.patch
-	bzip2/bzip2-1.0.5-slash.patch
 )
 
 #
diff --git a/scripts/gcc-12.2.0.sh b/scripts/gcc-12.2.0.sh
index 2858386..af5a636 100644
--- a/scripts/gcc-12.2.0.sh
+++ b/scripts/gcc-12.2.0.sh
@@ -102,6 +102,9 @@ PKG_CONFIGURE_FLAGS=(
 		&& echo "--enable-sjlj-exceptions" \
 	)
 	#
+	$( [[ $RUNTIME_MAJOR_VERSION -ge 11 ]] \
+		&& echo "--disable-libssp" \
+	)
 	--disable-libstdcxx-pch
 	--disable-libstdcxx-debug
 	$( [[ $BOOTSTRAPING == yes ]] \
diff --git a/scripts/libffi.sh b/scripts/libffi.sh
index 5daff81..24b9eaf 100644
--- a/scripts/libffi.sh
+++ b/scripts/libffi.sh
@@ -35,21 +35,19 @@
 
 # **************************************************************************
 
-PKG_VERSION=3.2.1
+PKG_VERSION=3.4.2
 PKG_NAME=libffi-${PKG_VERSION}
 PKG_DIR_NAME=libffi-${PKG_VERSION}
 PKG_TYPE=.tar.gz
 PKG_URLS=(
-	"https://sourceware.org/pub/libffi/libffi-${PKG_VERSION}${PKG_TYPE}"
+	"https://github.com/libffi/libffi/releases/download/v${PKG_VERSION}/libffi-${PKG_VERSION}${PKG_TYPE}"
 )
 
 PKG_PRIORITY=extra
 
 #
 
-PKG_PATCHES=(
-	libffi/fix_return_size.patch
-)
+PKG_PATCHES=()
 
 #
 
diff --git a/scripts/mingw-w64-crt.sh b/scripts/mingw-w64-crt.sh
index 4a8d6ea..08871b0 100644
--- a/scripts/mingw-w64-crt.sh
+++ b/scripts/mingw-w64-crt.sh
@@ -94,7 +94,8 @@ PKG_CONFIGURE_FLAGS=(
 #
 
 PKG_MAKE_FLAGS=(
-	-j$JOBS
+	#-j$JOBS
+	-j1
 	all
 )
 
diff --git a/scripts/openssl.sh b/scripts/openssl.sh
index 2464b9c..dab41e8 100644
--- a/scripts/openssl.sh
+++ b/scripts/openssl.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=1.1.1k
+PKG_VERSION=1.1.1q
 PKG_NAME=openssl-${PKG_VERSION}
 PKG_DIR_NAME=openssl-${PKG_VERSION}
 PKG_TYPE=.tar.gz
diff --git a/scripts/python-3.sh b/scripts/python-3.sh
index 3d93bc9..5a4c0c3 100644
--- a/scripts/python-3.sh
+++ b/scripts/python-3.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=3.9.10
+PKG_VERSION=3.10.7
 PKG_NAME=Python-${PKG_VERSION}
 PKG_DIR_NAME=Python-${PKG_VERSION}
 PKG_TYPE=git
@@ -48,7 +48,7 @@ PKG_PRIORITY=extra
 #
 
 PKG_EXECUTE_AFTER_UNCOMPRESS=(
-	"git reset --hard 12d1cb5" # Reset to this commit hash for reproducible builds
+	"git reset --hard c00cb40fdcbec2eed6a03ddbb39dfb270ac39154" # Reset to this commit hash for reproducible builds
 )
 
 #
@@ -101,10 +101,11 @@ PKG_CONFIGURE_FLAGS=(
 	# --with-tzpath=$LIBS_DIR/share/zoneinfo
 	--enable-optimizations
 	#
-	LIBFFI_INCLUDEDIR="$LIBSW_DIR/lib/libffi-$LIBFFI_VERSION/include"
+	PKG_CONFIG_PATH="$PREREQ_DIR/$BUILD_ARCHITECTURE-zlib-$LINK_TYPE_SUFFIX/lib/pkgconfig:$LIBS_DIR/lib/pkgconfig:$PKG_CONFIG_PATH"
 	CFLAGS="\"$COMMON_CFLAGS -D__USE_MINGW_ANSI_STDIO=1\""
 	CPPFLAGS="\"$COMMON_CPPFLAGS $MY_CPPFLAGS\""
 	LDFLAGS="\"$COMMON_LDFLAGS -L$PREREQW_DIR/$BUILD_ARCHITECTURE-zlib-$LINK_TYPE_SUFFIX/lib -L$LIBSW_DIR/lib\""
+	LIBS="\"-lffi -lole32 -loleaut32 -luuid\""
 )
 
 #
diff --git a/scripts/readline.sh b/scripts/readline.sh
index 6f7e561..f3a0fb1 100644
--- a/scripts/readline.sh
+++ b/scripts/readline.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=8.1
+PKG_VERSION=8.1.2
 PKG_NAME=readline-${PKG_VERSION}
 PKG_DIR_NAME=readline-${PKG_VERSION}
 PKG_TYPE=.tar.gz
@@ -48,7 +48,7 @@ PKG_PRIORITY=extra
 #
 
 PKG_PATCHES=(
-	readline/readline81-001.patch
+	#readline/readline81-001.patch
 	readline/Fixed-missing-POSIX_SIGNALS-check.patch
 )
 
diff --git a/scripts/sqlite.sh b/scripts/sqlite.sh
index 9a5fda0..aa7f23d 100644
--- a/scripts/sqlite.sh
+++ b/scripts/sqlite.sh
@@ -35,12 +35,12 @@
 
 # **************************************************************************
 
-PKG_VERSION=3350500
+PKG_VERSION=3380500
 PKG_NAME=sqlite-${PKG_VERSION}
 PKG_DIR_NAME=sqlite-autoconf-${PKG_VERSION}
 PKG_TYPE=.tar.gz
 PKG_URLS=(
-	"https://www.sqlite.org/2021/sqlite-autoconf-${PKG_VERSION}${PKG_TYPE}"
+	"https://www.sqlite.org/2022/sqlite-autoconf-${PKG_VERSION}${PKG_TYPE}"
 )
 PKG_PRIORITY=extra
 
diff --git a/scripts/tcl.sh b/scripts/tcl.sh
index af05ccc..d20f9b4 100644
--- a/scripts/tcl.sh
+++ b/scripts/tcl.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=8.6.11
+PKG_VERSION=8.6.12
 PKG_NAME=tcl${PKG_VERSION}
 PKG_DIR_NAME=tcl${PKG_VERSION}
 PKG_SUBDIR_NAME=win
diff --git a/scripts/tests.sh b/scripts/tests.sh
index 7668844..3cddb8a 100644
--- a/scripts/tests.sh
+++ b/scripts/tests.sh
@@ -81,15 +81,15 @@ lasterror_test2_list=(
 	"lasterror_test2.cpp -o lasterror_test2.exe"
 )
 
-[[ $MSVCRT_VERSION == ucrt ]] && (
-	time_test_list=(
-		"time_test.c -lpthread -lucrt -o time_test.exe"
-	)
-) || (
+#[[ $MSVCRT_VERSION == ucrt ]] && (
+#	time_test_list=(
+#		"time_test.c -lpthread -lucrt -o time_test.exe"
+#	)
+#) || (
 	time_test_list=(
 		"time_test.c -lpthread -o time_test.exe"
 	)
-)
+#)
 
 [[ `echo $BUILD_VERSION | cut -d. -f1` == 4 && `echo $BUILD_VERSION | cut -d. -f2` -le 6 ]] && (
 	sleep_test_list=(
diff --git a/scripts/tk.sh b/scripts/tk.sh
index d8e7194..40eb3f4 100644
--- a/scripts/tk.sh
+++ b/scripts/tk.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=8.6.11
+PKG_VERSION=8.6.12
 PKG_NAME=tk${PKG_VERSION}
 PKG_DIR_NAME=tk${PKG_VERSION}
 PKG_SUBDIR_NAME=win
diff --git a/scripts/winpthreads.sh b/scripts/winpthreads.sh
index baf7e28..65fff85 100644
--- a/scripts/winpthreads.sh
+++ b/scripts/winpthreads.sh
@@ -67,11 +67,11 @@ PKG_CONFIGURE_FLAGS=(
     # mingw-builds) with a first/initial bootstrap build of a toolchain with ucrt,
     # this linkage isn't needed then either. so assume the first ucrt mingw-build
     # toolchain would be built with a "--rev=0" arg.
-	$( [[ $MSVCRT_VERSION == ucrt ]] && \
-		[[ $BOOTSTRAPING == no ]] && \
-			[[ $RUNTIME_MAJOR_VERSION -ge 10 ]] && \
-                [[ $REV_NUM -eq 0 ]] && \
-                    echo "LIBS=\"-lucrtbase\"" )
+	#$( [[ $MSVCRT_VERSION == ucrt ]] && \
+	#	[[ $BOOTSTRAPING == no ]] && \
+	#		[[ $RUNTIME_MAJOR_VERSION -ge 10 ]] && \
+    #            [[ $REV_NUM -eq 0 ]] && \
+    #                echo "LIBS=\"-lucrtbase\"" )
 	CFLAGS="\"$COMMON_CFLAGS\""
 	CXXFLAGS="\"$COMMON_CXXFLAGS\""
 	CPPFLAGS="\"$COMMON_CPPFLAGS\""
diff --git a/scripts/xz-utils.sh b/scripts/xz-utils.sh
index 92bb22a..91e10d7 100644
--- a/scripts/xz-utils.sh
+++ b/scripts/xz-utils.sh
@@ -35,7 +35,7 @@
 
 # **************************************************************************
 
-PKG_VERSION=5.2.5
+PKG_VERSION=5.2.7
 PKG_NAME=xz-${PKG_VERSION}
 PKG_DIR_NAME=xz-${PKG_VERSION}
 PKG_TYPE=.tar.xz
diff --git a/scripts/zlib.sh b/scripts/zlib.sh
index 212b99d..ca02f90 100644
--- a/scripts/zlib.sh
+++ b/scripts/zlib.sh
@@ -35,12 +35,12 @@
 
 # **************************************************************************
 
-PKG_VERSION=1.2.12
+PKG_VERSION=1.2.13
 PKG_NAME=$PKG_ARCHITECTURE-zlib-${PKG_VERSION}-$LINK_TYPE_SUFFIX
 PKG_DIR_NAME=zlib-${PKG_VERSION}
 PKG_TYPE=.tar.gz
 PKG_URLS=(
-	"https://zlib.net/current/zlib-${PKG_VERSION}${PKG_TYPE}"
+	"https://zlib.net/zlib-${PKG_VERSION}${PKG_TYPE}"
 )
 
 PKG_PRIORITY=prereq
@@ -49,10 +49,10 @@ PKG_LNDIR=yes
 #
 
 PKG_PATCHES=(
-	zlib/01-zlib-1.2.11-1-buildsys.mingw.patch
+	zlib/01-zlib-1.2.13-buildsys.mingw.patch
 	zlib/03-dont-put-sodir-into-L.mingw.patch
 	zlib/04-fix-largefile-support.patch
-	zlib/607.patch
+	#zlib/607.patch
 )
 
 #
